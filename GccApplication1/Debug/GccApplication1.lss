
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  00000780  00000814  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000780  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000023  00800102  00800102  00000816  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000816  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000848  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000190  00000000  00000000  00000884  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000175f  00000000  00000000  00000a14  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d66  00000000  00000000  00002173  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c71  00000000  00000000  00002ed9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000390  00000000  00000000  00003b4c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007d5  00000000  00000000  00003edc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006fe  00000000  00000000  000046b1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000140  00000000  00000000  00004daf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	87 c0       	rjmp	.+270    	; 0x114 <__vector_1>
   6:	00 00       	nop
   8:	7b c0       	rjmp	.+246    	; 0x100 <__vector_2>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	84 c0       	rjmp	.+264    	; 0x14a <__vector_16>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e8       	ldi	r30, 0x80	; 128
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 30       	cpi	r26, 0x02	; 2
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a2 e0       	ldi	r26, 0x02	; 2
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a5 32       	cpi	r26, 0x25	; 37
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	c2 d0       	rcall	.+388    	; 0x248 <main>
  c4:	5b c3       	rjmp	.+1718   	; 0x77c <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <init_BT>:
#include "Bluetooth.h"
#include "Marble.h"
#include <avr/io.h>

void init_BT(){
	UCSR1A = 0x00;
  c8:	10 92 9b 00 	sts	0x009B, r1	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
	UCSR1B = 0x18;
  cc:	88 e1       	ldi	r24, 0x18	; 24
  ce:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
	UCSR1C = 0x06;
  d2:	86 e0       	ldi	r24, 0x06	; 6
  d4:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <__TEXT_REGION_LENGTH__+0x7e009d>
	
	UBRR1H = 0x00;
  d8:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
	UBRR1L = 103;
  dc:	87 e6       	ldi	r24, 0x67	; 103
  de:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
  e2:	08 95       	ret

000000e4 <Select_Item>:
#include <avr/io.h>
#include <util/delay.h>
#include "Item.h"

void Select_Item(char item){
	PORTC = (PORTC & 0xF0) | item;
  e4:	95 b3       	in	r25, 0x15	; 21
  e6:	90 7f       	andi	r25, 0xF0	; 240
  e8:	89 2b       	or	r24, r25
  ea:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ec:	2f ef       	ldi	r18, 0xFF	; 255
  ee:	81 ee       	ldi	r24, 0xE1	; 225
  f0:	94 e0       	ldi	r25, 0x04	; 4
  f2:	21 50       	subi	r18, 0x01	; 1
  f4:	80 40       	sbci	r24, 0x00	; 0
  f6:	90 40       	sbci	r25, 0x00	; 0
  f8:	e1 f7       	brne	.-8      	; 0xf2 <Select_Item+0xe>
  fa:	00 c0       	rjmp	.+0      	; 0xfc <Select_Item+0x18>
  fc:	00 00       	nop
  fe:	08 95       	ret

00000100 <__vector_2>:
	ADMUX = (ADMUX & 0xF0) | (idx & 0x0F); //다음 센서 선택
	ADCSRA |= (1 << ADSC); // ADC 변환 시작
}

void ElectroMagnet_On(){
	PORTC &= (0 << ElectroMagnet);
 100:	1f 92       	push	r1
 102:	0f 92       	push	r0
 104:	0f b6       	in	r0, 0x3f	; 63
 106:	0f 92       	push	r0
 108:	11 24       	eor	r1, r1
 10a:	0f 90       	pop	r0
 10c:	0f be       	out	0x3f, r0	; 63
 10e:	0f 90       	pop	r0
 110:	1f 90       	pop	r1
 112:	18 95       	reti

00000114 <__vector_1>:
 114:	1f 92       	push	r1
 116:	0f 92       	push	r0
 118:	0f b6       	in	r0, 0x3f	; 63
 11a:	0f 92       	push	r0
 11c:	11 24       	eor	r1, r1
 11e:	0f 90       	pop	r0
 120:	0f be       	out	0x3f, r0	; 63
 122:	0f 90       	pop	r0
 124:	1f 90       	pop	r1
 126:	18 95       	reti

00000128 <timer1_init>:
 128:	82 e8       	ldi	r24, 0x82	; 130
 12a:	8f bd       	out	0x2f, r24	; 47
 12c:	8b e1       	ldi	r24, 0x1B	; 27
 12e:	8e bd       	out	0x2e, r24	; 46
 130:	87 e8       	ldi	r24, 0x87	; 135
 132:	93 e1       	ldi	r25, 0x13	; 19
 134:	97 bd       	out	0x27, r25	; 39
 136:	86 bd       	out	0x26, r24	; 38
 138:	08 95       	ret

0000013a <port_setup>:
 13a:	8f ef       	ldi	r24, 0xFF	; 255
 13c:	8a bb       	out	0x1a, r24	; 26
 13e:	11 ba       	out	0x11, r1	; 17
 140:	87 bb       	out	0x17, r24	; 23
 142:	84 bb       	out	0x14, r24	; 20
 144:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 148:	08 95       	ret

0000014a <__vector_16>:
 14a:	1f 92       	push	r1
 14c:	0f 92       	push	r0
 14e:	0f b6       	in	r0, 0x3f	; 63
 150:	0f 92       	push	r0
 152:	11 24       	eor	r1, r1
 154:	0b b6       	in	r0, 0x3b	; 59
 156:	0f 92       	push	r0
 158:	2f 93       	push	r18
 15a:	3f 93       	push	r19
 15c:	4f 93       	push	r20
 15e:	5f 93       	push	r21
 160:	6f 93       	push	r22
 162:	7f 93       	push	r23
 164:	8f 93       	push	r24
 166:	9f 93       	push	r25
 168:	af 93       	push	r26
 16a:	bf 93       	push	r27
 16c:	ef 93       	push	r30
 16e:	ff 93       	push	r31
 170:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 174:	83 30       	cpi	r24, 0x03	; 3
 176:	d1 f0       	breq	.+52     	; 0x1ac <__vector_16+0x62>
 178:	28 f4       	brcc	.+10     	; 0x184 <__vector_16+0x3a>
 17a:	81 30       	cpi	r24, 0x01	; 1
 17c:	49 f0       	breq	.+18     	; 0x190 <__vector_16+0x46>
 17e:	82 30       	cpi	r24, 0x02	; 2
 180:	71 f0       	breq	.+28     	; 0x19e <__vector_16+0x54>
 182:	2d c0       	rjmp	.+90     	; 0x1de <__vector_16+0x94>
 184:	85 30       	cpi	r24, 0x05	; 5
 186:	01 f1       	breq	.+64     	; 0x1c8 <__vector_16+0x7e>
 188:	c0 f0       	brcs	.+48     	; 0x1ba <__vector_16+0x70>
 18a:	86 30       	cpi	r24, 0x06	; 6
 18c:	21 f1       	breq	.+72     	; 0x1d6 <__vector_16+0x8c>
 18e:	27 c0       	rjmp	.+78     	; 0x1de <__vector_16+0x94>
 190:	e7 d0       	rcall	.+462    	; 0x360 <Read_CDS>
 192:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 196:	8f 5f       	subi	r24, 0xFF	; 255
 198:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 19c:	20 c0       	rjmp	.+64     	; 0x1de <__vector_16+0x94>
 19e:	34 d1       	rcall	.+616    	; 0x408 <Read_Thermister>
 1a0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1a4:	8f 5f       	subi	r24, 0xFF	; 255
 1a6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 1aa:	19 c0       	rjmp	.+50     	; 0x1de <__vector_16+0x94>
 1ac:	18 d1       	rcall	.+560    	; 0x3de <Read_Pressure>
 1ae:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1b2:	8f 5f       	subi	r24, 0xFF	; 255
 1b4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 1b8:	12 c0       	rjmp	.+36     	; 0x1de <__vector_16+0x94>
 1ba:	3b d1       	rcall	.+630    	; 0x432 <Read_Shock>
 1bc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1c0:	8f 5f       	subi	r24, 0xFF	; 255
 1c2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 1c6:	0b c0       	rjmp	.+22     	; 0x1de <__vector_16+0x94>
 1c8:	e0 d0       	rcall	.+448    	; 0x38a <Read_Fire>
 1ca:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1ce:	8f 5f       	subi	r24, 0xFF	; 255
 1d0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 1d4:	04 c0       	rjmp	.+8      	; 0x1de <__vector_16+0x94>
 1d6:	ee d0       	rcall	.+476    	; 0x3b4 <Read_PSD>
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 1de:	87 b1       	in	r24, 0x07	; 7
 1e0:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1e4:	9f 70       	andi	r25, 0x0F	; 15
 1e6:	80 7f       	andi	r24, 0xF0	; 240
 1e8:	89 2b       	or	r24, r25
 1ea:	87 b9       	out	0x07, r24	; 7
 1ec:	86 b1       	in	r24, 0x06	; 6
 1ee:	80 64       	ori	r24, 0x40	; 64
 1f0:	86 b9       	out	0x06, r24	; 6
 1f2:	ff 91       	pop	r31
 1f4:	ef 91       	pop	r30
 1f6:	bf 91       	pop	r27
 1f8:	af 91       	pop	r26
 1fa:	9f 91       	pop	r25
 1fc:	8f 91       	pop	r24
 1fe:	7f 91       	pop	r23
 200:	6f 91       	pop	r22
 202:	5f 91       	pop	r21
 204:	4f 91       	pop	r20
 206:	3f 91       	pop	r19
 208:	2f 91       	pop	r18
 20a:	0f 90       	pop	r0
 20c:	0b be       	out	0x3b, r0	; 59
 20e:	0f 90       	pop	r0
 210:	0f be       	out	0x3f, r0	; 63
 212:	0f 90       	pop	r0
 214:	1f 90       	pop	r1
 216:	18 95       	reti

00000218 <ElectroMagnet_Off>:
	//PORTC = 0x7F;
}

void ElectroMagnet_Off(){
	PORTC |=  (1 << ElectroMagnet);
 218:	85 b3       	in	r24, 0x15	; 21
 21a:	80 68       	ori	r24, 0x80	; 128
 21c:	85 bb       	out	0x15, r24	; 21
 21e:	08 95       	ret

00000220 <RED_LED_On>:
	//PORTC = 0xFF;
}

void RED_LED_On(unsigned int p){
 220:	cf 93       	push	r28
 222:	df 93       	push	r29
 224:	ec 01       	movw	r28, r24
	Select_Item(ITEM_LED_RED);
 226:	89 e0       	ldi	r24, 0x09	; 9
 228:	5d df       	rcall	.-326    	; 0xe4 <Select_Item>
	OCR1A = p;
 22a:	db bd       	out	0x2b, r29	; 43
 22c:	ca bd       	out	0x2a, r28	; 42
}
 22e:	df 91       	pop	r29
 230:	cf 91       	pop	r28
 232:	08 95       	ret

00000234 <GREEN_LED_On>:
void GREEN_LED_On(unsigned int p){
 234:	cf 93       	push	r28
 236:	df 93       	push	r29
 238:	ec 01       	movw	r28, r24
	Select_Item(ITEM_LED_GREEN);
 23a:	8d e0       	ldi	r24, 0x0D	; 13
 23c:	53 df       	rcall	.-346    	; 0xe4 <Select_Item>
	OCR1A = p;
 23e:	db bd       	out	0x2b, r29	; 43
 240:	ca bd       	out	0x2a, r28	; 42
}
 242:	df 91       	pop	r29
 244:	cf 91       	pop	r28
 246:	08 95       	ret

00000248 <main>:
//기정이 일하는 곳
int main(void){
	//debug
	char iter = 0;
	
	cli();
 248:	f8 94       	cli
	port_setup();
 24a:	77 df       	rcall	.-274    	; 0x13a <port_setup>
	timer1_init();
 24c:	6d df       	rcall	.-294    	; 0x128 <timer1_init>
	init_BT();
 24e:	3c df       	rcall	.-392    	; 0xc8 <init_BT>
 250:	83 e0       	ldi	r24, 0x03	; 3
	
	EIMSK = 0x03; //External Interrupt Enable Mask
 252:	89 bf       	out	0x39, r24	; 57
 254:	8f e0       	ldi	r24, 0x0F	; 15
	EICRA = 0x0F; //External Interrupt Control Register(Edge)
 256:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
 25a:	78 94       	sei

	sei();
 25c:	8f ef       	ldi	r24, 0xFF	; 255
	
	DDRC = 0xFF;
 25e:	84 bb       	out	0x14, r24	; 20
 260:	15 ba       	out	0x15, r1	; 21
	PORTC = 0x00;
	
	shk_detected = 0x00;
 262:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <shk_detected>
	
	ElectroMagnet_Off();
 266:	d8 df       	rcall	.-80     	; 0x218 <ElectroMagnet_Off>
 268:	84 e1       	ldi	r24, 0x14	; 20
	
	Servo_increment_threshold = 20;
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <Servo_increment_threshold+0x1>
 270:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <Servo_increment_threshold>
 274:	81 e0       	ldi	r24, 0x01	; 1
	Servo_Allowed = 0x01;
 276:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <Servo_Allowed>
	
	Servo_Quick_Move(375);
 27a:	87 e7       	ldi	r24, 0x77	; 119
 27c:	91 e0       	ldi	r25, 0x01	; 1
 27e:	ee d0       	rcall	.+476    	; 0x45c <Servo_Quick_Move>
 280:	8f e3       	ldi	r24, 0x3F	; 63
 282:	9c e9       	ldi	r25, 0x9C	; 156
 284:	01 97       	sbiw	r24, 0x01	; 1
 286:	f1 f7       	brne	.-4      	; 0x284 <main+0x3c>
 288:	00 c0       	rjmp	.+0      	; 0x28a <main+0x42>
 28a:	00 00       	nop
 28c:	80 b3       	in	r24, 0x10	; 16
	//0x1111 0011: mask, 
	
	while(1){
		_delay_ms(10);
		
		switch(PIND & 0x03){
 28e:	83 70       	andi	r24, 0x03	; 3
 290:	81 30       	cpi	r24, 0x01	; 1
 292:	31 f0       	breq	.+12     	; 0x2a0 <main+0x58>
 294:	82 30       	cpi	r24, 0x02	; 2
 296:	a1 f7       	brne	.-24     	; 0x280 <main+0x38>
			case 0x02: //Select Red LED

				//Servo_Quick_Move(SERVO_HOME);
				RED_LED_On(500);
 298:	84 ef       	ldi	r24, 0xF4	; 244
 29a:	91 e0       	ldi	r25, 0x01	; 1
 29c:	c1 df       	rcall	.-126    	; 0x220 <RED_LED_On>
				//ElectroMagnet_On();
			break;
 29e:	f0 cf       	rjmp	.-32     	; 0x280 <main+0x38>
			case 0x01: //Select Green LED

				//Servo_Quick_Move(SERVO_BOX);
				//Select_Item(ITEM_LED_GREEN);
				
				GREEN_LED_On(500);
 2a0:	84 ef       	ldi	r24, 0xF4	; 244
 2a2:	91 e0       	ldi	r25, 0x01	; 1
 2a4:	c7 df       	rcall	.-114    	; 0x234 <GREEN_LED_On>
 2a6:	ec cf       	rjmp	.-40     	; 0x280 <main+0x38>

000002a8 <lpf>:
				//ElectroMagnet_Off();
			break;
 2a8:	8f 92       	push	r8
 2aa:	9f 92       	push	r9
 2ac:	af 92       	push	r10
 2ae:	bf 92       	push	r11
 2b0:	cf 92       	push	r12
 2b2:	df 92       	push	r13
 2b4:	ef 92       	push	r14
 2b6:	ff 92       	push	r15
 2b8:	cf 93       	push	r28
 2ba:	df 93       	push	r29
 2bc:	ec 01       	movw	r28, r24
 2be:	69 01       	movw	r12, r18
 2c0:	7a 01       	movw	r14, r20
 2c2:	80 e0       	ldi	r24, 0x00	; 0
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	69 d1       	rcall	.+722    	; 0x59a <__floatunsisf>
 2c8:	a7 01       	movw	r20, r14
 2ca:	96 01       	movw	r18, r12
 2cc:	f4 d1       	rcall	.+1000   	; 0x6b6 <__mulsf3>
 2ce:	4b 01       	movw	r8, r22
 2d0:	5c 01       	movw	r10, r24
 2d2:	a7 01       	movw	r20, r14
 2d4:	96 01       	movw	r18, r12
 2d6:	60 e0       	ldi	r22, 0x00	; 0
 2d8:	70 e0       	ldi	r23, 0x00	; 0
 2da:	80 e8       	ldi	r24, 0x80	; 128
 2dc:	9f e3       	ldi	r25, 0x3F	; 63
 2de:	cc d0       	rcall	.+408    	; 0x478 <__subsf3>
 2e0:	6b 01       	movw	r12, r22
 2e2:	7c 01       	movw	r14, r24
 2e4:	be 01       	movw	r22, r28
 2e6:	80 e0       	ldi	r24, 0x00	; 0
 2e8:	90 e0       	ldi	r25, 0x00	; 0
 2ea:	57 d1       	rcall	.+686    	; 0x59a <__floatunsisf>
 2ec:	a7 01       	movw	r20, r14
 2ee:	96 01       	movw	r18, r12
 2f0:	e2 d1       	rcall	.+964    	; 0x6b6 <__mulsf3>
 2f2:	9b 01       	movw	r18, r22
 2f4:	ac 01       	movw	r20, r24
 2f6:	c5 01       	movw	r24, r10
 2f8:	b4 01       	movw	r22, r8
 2fa:	bf d0       	rcall	.+382    	; 0x47a <__addsf3>
 2fc:	22 d1       	rcall	.+580    	; 0x542 <__fixunssfsi>
 2fe:	cb 01       	movw	r24, r22
 300:	df 91       	pop	r29
 302:	cf 91       	pop	r28
 304:	ff 90       	pop	r15
 306:	ef 90       	pop	r14
 308:	df 90       	pop	r13
 30a:	cf 90       	pop	r12
 30c:	bf 90       	pop	r11
 30e:	af 90       	pop	r10
 310:	9f 90       	pop	r9
 312:	8f 90       	pop	r8
 314:	08 95       	ret

00000316 <hpf>:
 316:	cf 92       	push	r12
 318:	df 92       	push	r13
 31a:	ef 92       	push	r14
 31c:	ff 92       	push	r15
 31e:	cf 93       	push	r28
 320:	df 93       	push	r29
 322:	ec 01       	movw	r28, r24
 324:	69 01       	movw	r12, r18
 326:	7a 01       	movw	r14, r20
 328:	68 0f       	add	r22, r24
 32a:	79 1f       	adc	r23, r25
 32c:	80 e0       	ldi	r24, 0x00	; 0
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	34 d1       	rcall	.+616    	; 0x59a <__floatunsisf>
 332:	a7 01       	movw	r20, r14
 334:	96 01       	movw	r18, r12
 336:	bf d1       	rcall	.+894    	; 0x6b6 <__mulsf3>
 338:	6b 01       	movw	r12, r22
 33a:	7c 01       	movw	r14, r24
 33c:	be 01       	movw	r22, r28
 33e:	80 e0       	ldi	r24, 0x00	; 0
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	2b d1       	rcall	.+598    	; 0x59a <__floatunsisf>
 344:	9b 01       	movw	r18, r22
 346:	ac 01       	movw	r20, r24
 348:	c7 01       	movw	r24, r14
 34a:	b6 01       	movw	r22, r12
 34c:	95 d0       	rcall	.+298    	; 0x478 <__subsf3>
 34e:	f9 d0       	rcall	.+498    	; 0x542 <__fixunssfsi>
 350:	cb 01       	movw	r24, r22
 352:	df 91       	pop	r29
 354:	cf 91       	pop	r28
 356:	ff 90       	pop	r15
 358:	ef 90       	pop	r14
 35a:	df 90       	pop	r13
 35c:	cf 90       	pop	r12
 35e:	08 95       	ret

00000360 <Read_CDS>:
 360:	64 b1       	in	r22, 0x04	; 4
 362:	75 b1       	in	r23, 0x05	; 5
 364:	2d ec       	ldi	r18, 0xCD	; 205
 366:	3c ec       	ldi	r19, 0xCC	; 204
 368:	4c ec       	ldi	r20, 0xCC	; 204
 36a:	5d e3       	ldi	r21, 0x3D	; 61
 36c:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <previous_value.1628>
 370:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <previous_value.1628+0x1>
 374:	99 df       	rcall	.-206    	; 0x2a8 <lpf>
 376:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <cds_sensor_val>
 37a:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <cds_sensor_val>
 37e:	90 e0       	ldi	r25, 0x00	; 0
 380:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <previous_value.1628+0x1>
 384:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <previous_value.1628>
 388:	08 95       	ret

0000038a <Read_Fire>:
 38a:	64 b1       	in	r22, 0x04	; 4
 38c:	75 b1       	in	r23, 0x05	; 5
 38e:	2d ec       	ldi	r18, 0xCD	; 205
 390:	3c ec       	ldi	r19, 0xCC	; 204
 392:	4c ec       	ldi	r20, 0xCC	; 204
 394:	5d e3       	ldi	r21, 0x3D	; 61
 396:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <previous_value.1631>
 39a:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <previous_value.1631+0x1>
 39e:	84 df       	rcall	.-248    	; 0x2a8 <lpf>
 3a0:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <fire_sensor_val>
 3a4:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <fire_sensor_val>
 3a8:	90 e0       	ldi	r25, 0x00	; 0
 3aa:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <previous_value.1631+0x1>
 3ae:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <previous_value.1631>
 3b2:	08 95       	ret

000003b4 <Read_PSD>:
 3b4:	64 b1       	in	r22, 0x04	; 4
 3b6:	75 b1       	in	r23, 0x05	; 5
 3b8:	2d ec       	ldi	r18, 0xCD	; 205
 3ba:	3c ec       	ldi	r19, 0xCC	; 204
 3bc:	4c ec       	ldi	r20, 0xCC	; 204
 3be:	5d e3       	ldi	r21, 0x3D	; 61
 3c0:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <previous_value.1634>
 3c4:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <previous_value.1634+0x1>
 3c8:	6f df       	rcall	.-290    	; 0x2a8 <lpf>
 3ca:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <psd_sensor_val>
 3ce:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <psd_sensor_val>
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <previous_value.1634+0x1>
 3d8:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <previous_value.1634>
 3dc:	08 95       	ret

000003de <Read_Pressure>:
 3de:	64 b1       	in	r22, 0x04	; 4
 3e0:	75 b1       	in	r23, 0x05	; 5
 3e2:	2a e9       	ldi	r18, 0x9A	; 154
 3e4:	39 e9       	ldi	r19, 0x99	; 153
 3e6:	49 e1       	ldi	r20, 0x19	; 25
 3e8:	5f e3       	ldi	r21, 0x3F	; 63
 3ea:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <previous_value.1637>
 3ee:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <previous_value.1637+0x1>
 3f2:	91 df       	rcall	.-222    	; 0x316 <hpf>
 3f4:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <pressure_sensor_val>
 3f8:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <pressure_sensor_val>
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <previous_value.1637+0x1>
 402:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <previous_value.1637>
 406:	08 95       	ret

00000408 <Read_Thermister>:
 408:	64 b1       	in	r22, 0x04	; 4
 40a:	75 b1       	in	r23, 0x05	; 5
 40c:	20 e0       	ldi	r18, 0x00	; 0
 40e:	30 e0       	ldi	r19, 0x00	; 0
 410:	40 e0       	ldi	r20, 0x00	; 0
 412:	5f e3       	ldi	r21, 0x3F	; 63
 414:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <previous_value.1640>
 418:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <previous_value.1640+0x1>
 41c:	7c df       	rcall	.-264    	; 0x316 <hpf>
 41e:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <temp_sensor_val>
 422:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <temp_sensor_val>
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <previous_value.1640+0x1>
 42c:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <previous_value.1640>
 430:	08 95       	ret

00000432 <Read_Shock>:
 432:	64 b1       	in	r22, 0x04	; 4
 434:	75 b1       	in	r23, 0x05	; 5
 436:	2d ec       	ldi	r18, 0xCD	; 205
 438:	3c ec       	ldi	r19, 0xCC	; 204
 43a:	4c ec       	ldi	r20, 0xCC	; 204
 43c:	5d e3       	ldi	r21, 0x3D	; 61
 43e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
 442:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_end+0x1>
 446:	30 df       	rcall	.-416    	; 0x2a8 <lpf>
 448:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <shk_sensor_val>
 44c:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <shk_sensor_val>
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_end+0x1>
 456:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
 45a:	08 95       	ret

0000045c <Servo_Quick_Move>:
void Calculate_Marble_pos(){
	//.........
}


void Servo_Quick_Move(unsigned short val){
 45c:	cf 93       	push	r28
 45e:	df 93       	push	r29
 460:	ec 01       	movw	r28, r24
	Select_Item(ITEM_SERVO);
 462:	82 e0       	ldi	r24, 0x02	; 2
 464:	3f de       	rcall	.-898    	; 0xe4 <Select_Item>
	Servo_pos = val;
 466:	d0 93 1b 01 	sts	0x011B, r29	; 0x80011b <Servo_pos+0x1>
 46a:	c0 93 1a 01 	sts	0x011A, r28	; 0x80011a <Servo_pos>
	OCR1A = Servo_pos;
 46e:	db bd       	out	0x2b, r29	; 43
 470:	ca bd       	out	0x2a, r28	; 42
}
 472:	df 91       	pop	r29
 474:	cf 91       	pop	r28
 476:	08 95       	ret

00000478 <__subsf3>:
 478:	50 58       	subi	r21, 0x80	; 128

0000047a <__addsf3>:
 47a:	bb 27       	eor	r27, r27
 47c:	aa 27       	eor	r26, r26
 47e:	0e d0       	rcall	.+28     	; 0x49c <__addsf3x>
 480:	e0 c0       	rjmp	.+448    	; 0x642 <__fp_round>
 482:	d1 d0       	rcall	.+418    	; 0x626 <__fp_pscA>
 484:	30 f0       	brcs	.+12     	; 0x492 <__addsf3+0x18>
 486:	d6 d0       	rcall	.+428    	; 0x634 <__fp_pscB>
 488:	20 f0       	brcs	.+8      	; 0x492 <__addsf3+0x18>
 48a:	31 f4       	brne	.+12     	; 0x498 <__addsf3+0x1e>
 48c:	9f 3f       	cpi	r25, 0xFF	; 255
 48e:	11 f4       	brne	.+4      	; 0x494 <__addsf3+0x1a>
 490:	1e f4       	brtc	.+6      	; 0x498 <__addsf3+0x1e>
 492:	c6 c0       	rjmp	.+396    	; 0x620 <__fp_nan>
 494:	0e f4       	brtc	.+2      	; 0x498 <__addsf3+0x1e>
 496:	e0 95       	com	r30
 498:	e7 fb       	bst	r30, 7
 49a:	bc c0       	rjmp	.+376    	; 0x614 <__fp_inf>

0000049c <__addsf3x>:
 49c:	e9 2f       	mov	r30, r25
 49e:	e2 d0       	rcall	.+452    	; 0x664 <__fp_split3>
 4a0:	80 f3       	brcs	.-32     	; 0x482 <__addsf3+0x8>
 4a2:	ba 17       	cp	r27, r26
 4a4:	62 07       	cpc	r22, r18
 4a6:	73 07       	cpc	r23, r19
 4a8:	84 07       	cpc	r24, r20
 4aa:	95 07       	cpc	r25, r21
 4ac:	18 f0       	brcs	.+6      	; 0x4b4 <__addsf3x+0x18>
 4ae:	71 f4       	brne	.+28     	; 0x4cc <__addsf3x+0x30>
 4b0:	9e f5       	brtc	.+102    	; 0x518 <__addsf3x+0x7c>
 4b2:	fa c0       	rjmp	.+500    	; 0x6a8 <__fp_zero>
 4b4:	0e f4       	brtc	.+2      	; 0x4b8 <__addsf3x+0x1c>
 4b6:	e0 95       	com	r30
 4b8:	0b 2e       	mov	r0, r27
 4ba:	ba 2f       	mov	r27, r26
 4bc:	a0 2d       	mov	r26, r0
 4be:	0b 01       	movw	r0, r22
 4c0:	b9 01       	movw	r22, r18
 4c2:	90 01       	movw	r18, r0
 4c4:	0c 01       	movw	r0, r24
 4c6:	ca 01       	movw	r24, r20
 4c8:	a0 01       	movw	r20, r0
 4ca:	11 24       	eor	r1, r1
 4cc:	ff 27       	eor	r31, r31
 4ce:	59 1b       	sub	r21, r25
 4d0:	99 f0       	breq	.+38     	; 0x4f8 <__addsf3x+0x5c>
 4d2:	59 3f       	cpi	r21, 0xF9	; 249
 4d4:	50 f4       	brcc	.+20     	; 0x4ea <__addsf3x+0x4e>
 4d6:	50 3e       	cpi	r21, 0xE0	; 224
 4d8:	68 f1       	brcs	.+90     	; 0x534 <__addsf3x+0x98>
 4da:	1a 16       	cp	r1, r26
 4dc:	f0 40       	sbci	r31, 0x00	; 0
 4de:	a2 2f       	mov	r26, r18
 4e0:	23 2f       	mov	r18, r19
 4e2:	34 2f       	mov	r19, r20
 4e4:	44 27       	eor	r20, r20
 4e6:	58 5f       	subi	r21, 0xF8	; 248
 4e8:	f3 cf       	rjmp	.-26     	; 0x4d0 <__addsf3x+0x34>
 4ea:	46 95       	lsr	r20
 4ec:	37 95       	ror	r19
 4ee:	27 95       	ror	r18
 4f0:	a7 95       	ror	r26
 4f2:	f0 40       	sbci	r31, 0x00	; 0
 4f4:	53 95       	inc	r21
 4f6:	c9 f7       	brne	.-14     	; 0x4ea <__addsf3x+0x4e>
 4f8:	7e f4       	brtc	.+30     	; 0x518 <__addsf3x+0x7c>
 4fa:	1f 16       	cp	r1, r31
 4fc:	ba 0b       	sbc	r27, r26
 4fe:	62 0b       	sbc	r22, r18
 500:	73 0b       	sbc	r23, r19
 502:	84 0b       	sbc	r24, r20
 504:	ba f0       	brmi	.+46     	; 0x534 <__addsf3x+0x98>
 506:	91 50       	subi	r25, 0x01	; 1
 508:	a1 f0       	breq	.+40     	; 0x532 <__addsf3x+0x96>
 50a:	ff 0f       	add	r31, r31
 50c:	bb 1f       	adc	r27, r27
 50e:	66 1f       	adc	r22, r22
 510:	77 1f       	adc	r23, r23
 512:	88 1f       	adc	r24, r24
 514:	c2 f7       	brpl	.-16     	; 0x506 <__addsf3x+0x6a>
 516:	0e c0       	rjmp	.+28     	; 0x534 <__addsf3x+0x98>
 518:	ba 0f       	add	r27, r26
 51a:	62 1f       	adc	r22, r18
 51c:	73 1f       	adc	r23, r19
 51e:	84 1f       	adc	r24, r20
 520:	48 f4       	brcc	.+18     	; 0x534 <__addsf3x+0x98>
 522:	87 95       	ror	r24
 524:	77 95       	ror	r23
 526:	67 95       	ror	r22
 528:	b7 95       	ror	r27
 52a:	f7 95       	ror	r31
 52c:	9e 3f       	cpi	r25, 0xFE	; 254
 52e:	08 f0       	brcs	.+2      	; 0x532 <__addsf3x+0x96>
 530:	b3 cf       	rjmp	.-154    	; 0x498 <__addsf3+0x1e>
 532:	93 95       	inc	r25
 534:	88 0f       	add	r24, r24
 536:	08 f0       	brcs	.+2      	; 0x53a <__addsf3x+0x9e>
 538:	99 27       	eor	r25, r25
 53a:	ee 0f       	add	r30, r30
 53c:	97 95       	ror	r25
 53e:	87 95       	ror	r24
 540:	08 95       	ret

00000542 <__fixunssfsi>:
 542:	98 d0       	rcall	.+304    	; 0x674 <__fp_splitA>
 544:	88 f0       	brcs	.+34     	; 0x568 <__fixunssfsi+0x26>
 546:	9f 57       	subi	r25, 0x7F	; 127
 548:	90 f0       	brcs	.+36     	; 0x56e <__fixunssfsi+0x2c>
 54a:	b9 2f       	mov	r27, r25
 54c:	99 27       	eor	r25, r25
 54e:	b7 51       	subi	r27, 0x17	; 23
 550:	a0 f0       	brcs	.+40     	; 0x57a <__fixunssfsi+0x38>
 552:	d1 f0       	breq	.+52     	; 0x588 <__fixunssfsi+0x46>
 554:	66 0f       	add	r22, r22
 556:	77 1f       	adc	r23, r23
 558:	88 1f       	adc	r24, r24
 55a:	99 1f       	adc	r25, r25
 55c:	1a f0       	brmi	.+6      	; 0x564 <__fixunssfsi+0x22>
 55e:	ba 95       	dec	r27
 560:	c9 f7       	brne	.-14     	; 0x554 <__fixunssfsi+0x12>
 562:	12 c0       	rjmp	.+36     	; 0x588 <__fixunssfsi+0x46>
 564:	b1 30       	cpi	r27, 0x01	; 1
 566:	81 f0       	breq	.+32     	; 0x588 <__fixunssfsi+0x46>
 568:	9f d0       	rcall	.+318    	; 0x6a8 <__fp_zero>
 56a:	b1 e0       	ldi	r27, 0x01	; 1
 56c:	08 95       	ret
 56e:	9c c0       	rjmp	.+312    	; 0x6a8 <__fp_zero>
 570:	67 2f       	mov	r22, r23
 572:	78 2f       	mov	r23, r24
 574:	88 27       	eor	r24, r24
 576:	b8 5f       	subi	r27, 0xF8	; 248
 578:	39 f0       	breq	.+14     	; 0x588 <__fixunssfsi+0x46>
 57a:	b9 3f       	cpi	r27, 0xF9	; 249
 57c:	cc f3       	brlt	.-14     	; 0x570 <__fixunssfsi+0x2e>
 57e:	86 95       	lsr	r24
 580:	77 95       	ror	r23
 582:	67 95       	ror	r22
 584:	b3 95       	inc	r27
 586:	d9 f7       	brne	.-10     	; 0x57e <__fixunssfsi+0x3c>
 588:	3e f4       	brtc	.+14     	; 0x598 <__fixunssfsi+0x56>
 58a:	90 95       	com	r25
 58c:	80 95       	com	r24
 58e:	70 95       	com	r23
 590:	61 95       	neg	r22
 592:	7f 4f       	sbci	r23, 0xFF	; 255
 594:	8f 4f       	sbci	r24, 0xFF	; 255
 596:	9f 4f       	sbci	r25, 0xFF	; 255
 598:	08 95       	ret

0000059a <__floatunsisf>:
 59a:	e8 94       	clt
 59c:	09 c0       	rjmp	.+18     	; 0x5b0 <__floatsisf+0x12>

0000059e <__floatsisf>:
 59e:	97 fb       	bst	r25, 7
 5a0:	3e f4       	brtc	.+14     	; 0x5b0 <__floatsisf+0x12>
 5a2:	90 95       	com	r25
 5a4:	80 95       	com	r24
 5a6:	70 95       	com	r23
 5a8:	61 95       	neg	r22
 5aa:	7f 4f       	sbci	r23, 0xFF	; 255
 5ac:	8f 4f       	sbci	r24, 0xFF	; 255
 5ae:	9f 4f       	sbci	r25, 0xFF	; 255
 5b0:	99 23       	and	r25, r25
 5b2:	a9 f0       	breq	.+42     	; 0x5de <__floatsisf+0x40>
 5b4:	f9 2f       	mov	r31, r25
 5b6:	96 e9       	ldi	r25, 0x96	; 150
 5b8:	bb 27       	eor	r27, r27
 5ba:	93 95       	inc	r25
 5bc:	f6 95       	lsr	r31
 5be:	87 95       	ror	r24
 5c0:	77 95       	ror	r23
 5c2:	67 95       	ror	r22
 5c4:	b7 95       	ror	r27
 5c6:	f1 11       	cpse	r31, r1
 5c8:	f8 cf       	rjmp	.-16     	; 0x5ba <__floatsisf+0x1c>
 5ca:	fa f4       	brpl	.+62     	; 0x60a <__floatsisf+0x6c>
 5cc:	bb 0f       	add	r27, r27
 5ce:	11 f4       	brne	.+4      	; 0x5d4 <__floatsisf+0x36>
 5d0:	60 ff       	sbrs	r22, 0
 5d2:	1b c0       	rjmp	.+54     	; 0x60a <__floatsisf+0x6c>
 5d4:	6f 5f       	subi	r22, 0xFF	; 255
 5d6:	7f 4f       	sbci	r23, 0xFF	; 255
 5d8:	8f 4f       	sbci	r24, 0xFF	; 255
 5da:	9f 4f       	sbci	r25, 0xFF	; 255
 5dc:	16 c0       	rjmp	.+44     	; 0x60a <__floatsisf+0x6c>
 5de:	88 23       	and	r24, r24
 5e0:	11 f0       	breq	.+4      	; 0x5e6 <__floatsisf+0x48>
 5e2:	96 e9       	ldi	r25, 0x96	; 150
 5e4:	11 c0       	rjmp	.+34     	; 0x608 <__floatsisf+0x6a>
 5e6:	77 23       	and	r23, r23
 5e8:	21 f0       	breq	.+8      	; 0x5f2 <__floatsisf+0x54>
 5ea:	9e e8       	ldi	r25, 0x8E	; 142
 5ec:	87 2f       	mov	r24, r23
 5ee:	76 2f       	mov	r23, r22
 5f0:	05 c0       	rjmp	.+10     	; 0x5fc <__floatsisf+0x5e>
 5f2:	66 23       	and	r22, r22
 5f4:	71 f0       	breq	.+28     	; 0x612 <__floatsisf+0x74>
 5f6:	96 e8       	ldi	r25, 0x86	; 134
 5f8:	86 2f       	mov	r24, r22
 5fa:	70 e0       	ldi	r23, 0x00	; 0
 5fc:	60 e0       	ldi	r22, 0x00	; 0
 5fe:	2a f0       	brmi	.+10     	; 0x60a <__floatsisf+0x6c>
 600:	9a 95       	dec	r25
 602:	66 0f       	add	r22, r22
 604:	77 1f       	adc	r23, r23
 606:	88 1f       	adc	r24, r24
 608:	da f7       	brpl	.-10     	; 0x600 <__floatsisf+0x62>
 60a:	88 0f       	add	r24, r24
 60c:	96 95       	lsr	r25
 60e:	87 95       	ror	r24
 610:	97 f9       	bld	r25, 7
 612:	08 95       	ret

00000614 <__fp_inf>:
 614:	97 f9       	bld	r25, 7
 616:	9f 67       	ori	r25, 0x7F	; 127
 618:	80 e8       	ldi	r24, 0x80	; 128
 61a:	70 e0       	ldi	r23, 0x00	; 0
 61c:	60 e0       	ldi	r22, 0x00	; 0
 61e:	08 95       	ret

00000620 <__fp_nan>:
 620:	9f ef       	ldi	r25, 0xFF	; 255
 622:	80 ec       	ldi	r24, 0xC0	; 192
 624:	08 95       	ret

00000626 <__fp_pscA>:
 626:	00 24       	eor	r0, r0
 628:	0a 94       	dec	r0
 62a:	16 16       	cp	r1, r22
 62c:	17 06       	cpc	r1, r23
 62e:	18 06       	cpc	r1, r24
 630:	09 06       	cpc	r0, r25
 632:	08 95       	ret

00000634 <__fp_pscB>:
 634:	00 24       	eor	r0, r0
 636:	0a 94       	dec	r0
 638:	12 16       	cp	r1, r18
 63a:	13 06       	cpc	r1, r19
 63c:	14 06       	cpc	r1, r20
 63e:	05 06       	cpc	r0, r21
 640:	08 95       	ret

00000642 <__fp_round>:
 642:	09 2e       	mov	r0, r25
 644:	03 94       	inc	r0
 646:	00 0c       	add	r0, r0
 648:	11 f4       	brne	.+4      	; 0x64e <__fp_round+0xc>
 64a:	88 23       	and	r24, r24
 64c:	52 f0       	brmi	.+20     	; 0x662 <__fp_round+0x20>
 64e:	bb 0f       	add	r27, r27
 650:	40 f4       	brcc	.+16     	; 0x662 <__fp_round+0x20>
 652:	bf 2b       	or	r27, r31
 654:	11 f4       	brne	.+4      	; 0x65a <__fp_round+0x18>
 656:	60 ff       	sbrs	r22, 0
 658:	04 c0       	rjmp	.+8      	; 0x662 <__fp_round+0x20>
 65a:	6f 5f       	subi	r22, 0xFF	; 255
 65c:	7f 4f       	sbci	r23, 0xFF	; 255
 65e:	8f 4f       	sbci	r24, 0xFF	; 255
 660:	9f 4f       	sbci	r25, 0xFF	; 255
 662:	08 95       	ret

00000664 <__fp_split3>:
 664:	57 fd       	sbrc	r21, 7
 666:	90 58       	subi	r25, 0x80	; 128
 668:	44 0f       	add	r20, r20
 66a:	55 1f       	adc	r21, r21
 66c:	59 f0       	breq	.+22     	; 0x684 <__fp_splitA+0x10>
 66e:	5f 3f       	cpi	r21, 0xFF	; 255
 670:	71 f0       	breq	.+28     	; 0x68e <__fp_splitA+0x1a>
 672:	47 95       	ror	r20

00000674 <__fp_splitA>:
 674:	88 0f       	add	r24, r24
 676:	97 fb       	bst	r25, 7
 678:	99 1f       	adc	r25, r25
 67a:	61 f0       	breq	.+24     	; 0x694 <__fp_splitA+0x20>
 67c:	9f 3f       	cpi	r25, 0xFF	; 255
 67e:	79 f0       	breq	.+30     	; 0x69e <__fp_splitA+0x2a>
 680:	87 95       	ror	r24
 682:	08 95       	ret
 684:	12 16       	cp	r1, r18
 686:	13 06       	cpc	r1, r19
 688:	14 06       	cpc	r1, r20
 68a:	55 1f       	adc	r21, r21
 68c:	f2 cf       	rjmp	.-28     	; 0x672 <__fp_split3+0xe>
 68e:	46 95       	lsr	r20
 690:	f1 df       	rcall	.-30     	; 0x674 <__fp_splitA>
 692:	08 c0       	rjmp	.+16     	; 0x6a4 <__fp_splitA+0x30>
 694:	16 16       	cp	r1, r22
 696:	17 06       	cpc	r1, r23
 698:	18 06       	cpc	r1, r24
 69a:	99 1f       	adc	r25, r25
 69c:	f1 cf       	rjmp	.-30     	; 0x680 <__fp_splitA+0xc>
 69e:	86 95       	lsr	r24
 6a0:	71 05       	cpc	r23, r1
 6a2:	61 05       	cpc	r22, r1
 6a4:	08 94       	sec
 6a6:	08 95       	ret

000006a8 <__fp_zero>:
 6a8:	e8 94       	clt

000006aa <__fp_szero>:
 6aa:	bb 27       	eor	r27, r27
 6ac:	66 27       	eor	r22, r22
 6ae:	77 27       	eor	r23, r23
 6b0:	cb 01       	movw	r24, r22
 6b2:	97 f9       	bld	r25, 7
 6b4:	08 95       	ret

000006b6 <__mulsf3>:
 6b6:	0b d0       	rcall	.+22     	; 0x6ce <__mulsf3x>
 6b8:	c4 cf       	rjmp	.-120    	; 0x642 <__fp_round>
 6ba:	b5 df       	rcall	.-150    	; 0x626 <__fp_pscA>
 6bc:	28 f0       	brcs	.+10     	; 0x6c8 <__mulsf3+0x12>
 6be:	ba df       	rcall	.-140    	; 0x634 <__fp_pscB>
 6c0:	18 f0       	brcs	.+6      	; 0x6c8 <__mulsf3+0x12>
 6c2:	95 23       	and	r25, r21
 6c4:	09 f0       	breq	.+2      	; 0x6c8 <__mulsf3+0x12>
 6c6:	a6 cf       	rjmp	.-180    	; 0x614 <__fp_inf>
 6c8:	ab cf       	rjmp	.-170    	; 0x620 <__fp_nan>
 6ca:	11 24       	eor	r1, r1
 6cc:	ee cf       	rjmp	.-36     	; 0x6aa <__fp_szero>

000006ce <__mulsf3x>:
 6ce:	ca df       	rcall	.-108    	; 0x664 <__fp_split3>
 6d0:	a0 f3       	brcs	.-24     	; 0x6ba <__mulsf3+0x4>

000006d2 <__mulsf3_pse>:
 6d2:	95 9f       	mul	r25, r21
 6d4:	d1 f3       	breq	.-12     	; 0x6ca <__mulsf3+0x14>
 6d6:	95 0f       	add	r25, r21
 6d8:	50 e0       	ldi	r21, 0x00	; 0
 6da:	55 1f       	adc	r21, r21
 6dc:	62 9f       	mul	r22, r18
 6de:	f0 01       	movw	r30, r0
 6e0:	72 9f       	mul	r23, r18
 6e2:	bb 27       	eor	r27, r27
 6e4:	f0 0d       	add	r31, r0
 6e6:	b1 1d       	adc	r27, r1
 6e8:	63 9f       	mul	r22, r19
 6ea:	aa 27       	eor	r26, r26
 6ec:	f0 0d       	add	r31, r0
 6ee:	b1 1d       	adc	r27, r1
 6f0:	aa 1f       	adc	r26, r26
 6f2:	64 9f       	mul	r22, r20
 6f4:	66 27       	eor	r22, r22
 6f6:	b0 0d       	add	r27, r0
 6f8:	a1 1d       	adc	r26, r1
 6fa:	66 1f       	adc	r22, r22
 6fc:	82 9f       	mul	r24, r18
 6fe:	22 27       	eor	r18, r18
 700:	b0 0d       	add	r27, r0
 702:	a1 1d       	adc	r26, r1
 704:	62 1f       	adc	r22, r18
 706:	73 9f       	mul	r23, r19
 708:	b0 0d       	add	r27, r0
 70a:	a1 1d       	adc	r26, r1
 70c:	62 1f       	adc	r22, r18
 70e:	83 9f       	mul	r24, r19
 710:	a0 0d       	add	r26, r0
 712:	61 1d       	adc	r22, r1
 714:	22 1f       	adc	r18, r18
 716:	74 9f       	mul	r23, r20
 718:	33 27       	eor	r19, r19
 71a:	a0 0d       	add	r26, r0
 71c:	61 1d       	adc	r22, r1
 71e:	23 1f       	adc	r18, r19
 720:	84 9f       	mul	r24, r20
 722:	60 0d       	add	r22, r0
 724:	21 1d       	adc	r18, r1
 726:	82 2f       	mov	r24, r18
 728:	76 2f       	mov	r23, r22
 72a:	6a 2f       	mov	r22, r26
 72c:	11 24       	eor	r1, r1
 72e:	9f 57       	subi	r25, 0x7F	; 127
 730:	50 40       	sbci	r21, 0x00	; 0
 732:	8a f0       	brmi	.+34     	; 0x756 <__mulsf3_pse+0x84>
 734:	e1 f0       	breq	.+56     	; 0x76e <__mulsf3_pse+0x9c>
 736:	88 23       	and	r24, r24
 738:	4a f0       	brmi	.+18     	; 0x74c <__mulsf3_pse+0x7a>
 73a:	ee 0f       	add	r30, r30
 73c:	ff 1f       	adc	r31, r31
 73e:	bb 1f       	adc	r27, r27
 740:	66 1f       	adc	r22, r22
 742:	77 1f       	adc	r23, r23
 744:	88 1f       	adc	r24, r24
 746:	91 50       	subi	r25, 0x01	; 1
 748:	50 40       	sbci	r21, 0x00	; 0
 74a:	a9 f7       	brne	.-22     	; 0x736 <__mulsf3_pse+0x64>
 74c:	9e 3f       	cpi	r25, 0xFE	; 254
 74e:	51 05       	cpc	r21, r1
 750:	70 f0       	brcs	.+28     	; 0x76e <__mulsf3_pse+0x9c>
 752:	60 cf       	rjmp	.-320    	; 0x614 <__fp_inf>
 754:	aa cf       	rjmp	.-172    	; 0x6aa <__fp_szero>
 756:	5f 3f       	cpi	r21, 0xFF	; 255
 758:	ec f3       	brlt	.-6      	; 0x754 <__mulsf3_pse+0x82>
 75a:	98 3e       	cpi	r25, 0xE8	; 232
 75c:	dc f3       	brlt	.-10     	; 0x754 <__mulsf3_pse+0x82>
 75e:	86 95       	lsr	r24
 760:	77 95       	ror	r23
 762:	67 95       	ror	r22
 764:	b7 95       	ror	r27
 766:	f7 95       	ror	r31
 768:	e7 95       	ror	r30
 76a:	9f 5f       	subi	r25, 0xFF	; 255
 76c:	c1 f7       	brne	.-16     	; 0x75e <__mulsf3_pse+0x8c>
 76e:	fe 2b       	or	r31, r30
 770:	88 0f       	add	r24, r24
 772:	91 1d       	adc	r25, r1
 774:	96 95       	lsr	r25
 776:	87 95       	ror	r24
 778:	97 f9       	bld	r25, 7
 77a:	08 95       	ret

0000077c <_exit>:
 77c:	f8 94       	cli

0000077e <__stop_program>:
 77e:	ff cf       	rjmp	.-2      	; 0x77e <__stop_program>
